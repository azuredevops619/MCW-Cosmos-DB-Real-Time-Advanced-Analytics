{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueSuffix": {
            "type": "String",
            "metadata": {
                "description": "Suffix added to all resource names to make them unique. Use a maximum of 3 random characters. Four or more characters will be ignored."
            }
        },
        "autoscaleMaxThroughput": {
            "type": "int",
            "defaultValue": 4000,
            "minValue": 400,
            "maxValue": 4000,
            "metadata": {
                "description": "Maximum throughput when using Autoscale Throughput Policy for the container"
            }
        },
        "vmUsername": {
            "defaultValue": "demouser",
            "type": "string",
            "metadata": {
                "description": "Administrator user name for logging into the Lab Virtual Machine."
            }
        },
        "vmPassword": {
            "defaultValue": "Password.1!!",
            "type": "securestring",
            "minLength": 8,
            "maxLength": 128,
            "metadata": {
                "description": "The password must be between 8 and 128 characters in length and must contain at least one number, one non-alphanumeric character, and one upper or lower case letter. Default value is Password.1!!"
            }
        }
    },
    "variables": {
        "name_suffix": "[take(toLower(concat(take(uniqueString(resourceGroup().id), 10), parameters('uniqueSuffix'))), 13)]",
        "primary_region": "East US",
        "secondary_region": "West US",
        "cosmosdb_databaseAccount_name": "[concat('woodgrove-db-', variables('name_suffix'))]",
        "cosmosdb_region": "[variables('primary_region')]",
        "cosmosdb_region_secondary": "[variables('secondary_region')]",
        "cosmosdb_databaseName": "Woodgrove",
        "cosmosdb_containerName": "transactions",
        "cosmosdb_containerName2": "suspicious_transactions",
        "cosmosdb_containerName3": "metadata",
        "throughputPolicy": {
            "Autoscale": {
                "autoscaleSettings": {
                    "maxThroughput": "[parameters('autoscaleMaxThroughput')]"
                }
            }
        },
        "datalake_storageAccount_name": "[concat('adlsgen2stg', variables('name_suffix'))]",
        "datalake_region": "[variables('secondary_region')]",
        "eventhub_namespace_name": "[concat('woodgrove-', variables('name_suffix'))]",
        "eventhub_region": "[variables('primary_region')]",
        "keyvault_name": "[concat('woodgrove-', variables('name_suffix'))]",
        "keyvault_region": "[variables('primary_region')]",
        "sqlAdministratorLogin": "asa.sql.admin",
        "workspaceName": "[concat('asaworkspace', variables('name_suffix'))]",
        "adlsStorageAccountName": "[concat('asadatalake', variables('name_suffix'))]",
        "defaultDataLakeStorageFilesystemName": "defaultfs",
        "sparkComputeName": "SparkPool01",
        "computeSubnetId": "",
        "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
        "defaultDataLakeStorageAccountUrl": "[concat('https://', variables('adlsStorageAccountName'), '.dfs.core.windows.net')]",
        "sparkAutoScaleEnabled": "true",
        "sparkMinNodeCount": "3",
        "sparkMaxNodeCount": "4",
        "sparkNodeCount": "0",
        "sparkNodeSizeFamily": "MemoryOptimized",
        "sparkNodeSize": "Small",
        "sparkAutoPauseEnabled": "true",
        "sparkAutoPauseDelayInMinutes": "15",
        "sparkVersion": "3.2",
        "blobStorageAccountName": "[concat('asastore', variables('name_suffix'))]",
        "applicationInsightsName": "[concat('asaappinsights', variables('name_suffix'))]",
        "amlWorkspaceName": "[concat('amlworkspace', variables('name_suffix'))]",

        "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
        "addressPrefix": "176.16.0.0/16",
        "subnetName": "default",
        "subnetPrefix": "176.16.0.0/24",

        "vmName": "LabVM",
        "vmSize": "Standard_D4s_v3",
        "vmNetworkSecurityGroupName": "[concat(variables('vmName'), '-nsg')]",
        "vmNetworkInterfaceName": "[concat(variables('vmName'), '-nic')]",
        "vmPublicIpAddressName": "[concat(variables('vmName'), '-ip')]",
        "vmCustomScriptFileName": "configure-labvm.ps1",
        "vmCustomScriptUri": "[concat('https://raw.githubusercontent.com/azuredevops619/MCW-Real-Time-Advanced-Analytics/main/Hands-on%20lab/Deployment/', variables('vmCustomScriptFileName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-04-01",
            "name": "[variables('cosmosdb_databaseAccount_name')]",
            "location": "[variables('cosmosdb_region')]",
            "kind": "GlobalDocumentDB",
            "properties": {
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": true,
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session"
                },
                "enableAnalyticalStorage": true,
                "locations": [
                    {
                        "locationName": "[variables('cosmosdb_region')]",
                        "failoverPriority": 0
                    },
                    {
                        "locationName": "[variables('cosmosdb_region_secondary')]",
                        "failoverPriority": 1
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "name": "[concat(variables('cosmosdb_databaseAccount_name'), '/', variables('cosmosdb_databaseName'))]",
            "apiVersion": "2020-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosdb_databaseAccount_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosdb_databaseName')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "name": "[concat(variables('cosmosdb_databaseAccount_name'), '/', variables('cosmosdb_databaseName'), '/', variables('cosmosdb_containerName'))]",
            "apiVersion": "2020-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_databaseAccount_name'), variables('cosmosdb_databaseName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosdb_containerName')]",
                    "partitionKey": {
                        "paths": [
                            "/ipCountryCode"
                        ],
                        "kind": "Hash"
                    },
                    "analyticalStorageTtl": -1
                },
                "options": "[variables('throughputPolicy')['Autoscale']]"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "name": "[concat(variables('cosmosdb_databaseAccount_name'), '/', variables('cosmosdb_databaseName'), '/', variables('cosmosdb_containerName2'))]",
            "apiVersion": "2020-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_databaseAccount_name'), variables('cosmosdb_databaseName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosdb_containerName2')]",
                    "partitionKey": {
                        "paths": [
                            "/ipCountryCode"
                        ],
                        "kind": "Hash"
                    },
                    "analyticalStorageTtl": -1
                },
                "options": "[variables('throughputPolicy')['Autoscale']]"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "name": "[concat(variables('cosmosdb_databaseAccount_name'), '/', variables('cosmosdb_databaseName'), '/', variables('cosmosdb_containerName3'))]",
            "apiVersion": "2020-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_databaseAccount_name'), variables('cosmosdb_databaseName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosdb_containerName3')]",
                    "partitionKey": {
                        "paths": [
                            "/accountID"
                        ],
                        "kind": "Hash"
                    },
                    "analyticalStorageTtl": -1
                },
                "options": "[variables('throughputPolicy')['Autoscale']]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[variables('datalake_storageAccount_name')]",
            "location": "[variables('datalake_region')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2017-04-01",
            "name": "[variables('eventhub_namespace_name')]",
            "location": "[variables('eventhub_region')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('eventhub_namespace_name'), '/RootManageSharedAccessKey')]",
            "location": "[variables('eventhub_region')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_namespace_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('eventhub_namespace_name'), '/transactions')]",
            "location": "[variables('eventhub_region')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_namespace_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 10,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('eventhub_namespace_name'), '/transactions/$Default')]",
            "location": "[variables('eventhub_region')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhub_namespace_name'), 'transactions')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_namespace_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[variables('keyvault_name')]",
            "location": "[variables('keyvault_region')]",
            "properties": {
                "managedResourceGroupId": "[resourceGroup().id]",
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "accessPolicies": [],
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('blobStorageAccountName')]",
            "location": "[variables('primary_region')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('blobStorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('adlsStorageAccountName')]",
            "location": "[variables('primary_region')]",
            "dependsOn": [],
            "tags": {},
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": "true",
                "isHnsEnabled": "true",
                "largeFileSharesState": "Disabled"
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "name": "[concat('default/', variables('defaultDataLakeStorageFilesystemName'))]",
                    "dependsOn": [
                        "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2019-06-01-preview",
            "name": "[variables('workspaceName')]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'), '/blobServices/default/containers/', variables('defaultDataLakeStorageFilesystemName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
                    "filesystem": "[variables('defaultDataLakeStorageFilesystemName')]"
                },
                "virtualNetworkProfile": {
                    "computeSubnetId": "[variables('computeSubnetId')]"
                },
                "sqlAdministratorLogin": "[variables('sqlAdministratorLogin')]"
            },
            "resources": [
                {
                    "type": "firewallrules",
                    "apiVersion": "2019-06-01-preview",
                    "name": "allowAll",
                    "location": "[variables('primary_region')]",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(variables('adlsStorageAccountName'), '/default/', variables('defaultDataLakeStorageFilesystemName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'))))]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'), '2'))]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
                "nodeCount": "[variables('sparkNodeCount')]",
                "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
                "nodeSize": "[variables('sparkNodeSize')]",
                "autoScale": {
                    "enabled": "[variables('sparkAutoScaleEnabled')]",
                    "minNodeCount": "[variables('sparkMinNodeCount')]",
                    "maxNodeCount": "[variables('sparkMaxNodeCount')]"
                },
                "autoPause": {
                    "enabled": "[variables('sparkAutoPauseEnabled')]",
                    "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
                },
                "sparkVersion": "[variables('sparkVersion')]"
            }
        },
        {
          "apiVersion": "2015-01-01",
          "type": "Microsoft.Resources/deployments",
          "name": "UpdateSparkPool01",
          "dependsOn": [
            "[resourceId('Microsoft.Synapse/workspaces/bigDataPools', variables('workspaceName'), variables('sparkComputeName'))]"

          ],
          "properties":{
            "mode": "Incremental",
            "parameters": {},
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {},
              "variables": {},
              "resources": [
              {
                  "type": "Microsoft.Synapse/workspaces/bigDataPools",
                  "apiVersion": "2019-06-01-preview",
                  "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
                  "location": "[variables('primary_region')]",
                  "properties": {
                    "nodeCount": "[variables('sparkNodeCount')]",
                    "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
                    "nodeSize": "[variables('sparkNodeSize')]",
                    "autoScale": {
                      "enabled": "[variables('sparkAutoScaleEnabled')]",
                      "minNodeCount": "[variables('sparkMinNodeCount')]",
                      "maxNodeCount": "[variables('sparkMaxNodeCount')]"
                    },
                    "autoPause": {
                      "enabled": "[variables('sparkAutoPauseEnabled')]",
                      "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
                    },
                    "sparkVersion": "[variables('sparkVersion')]"
                  }
                }
              ]
            }
          }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[variables('applicationInsightsName')]",
            "location": "[if(or(equals(variables('primary_region'),'eastus2'),equals(variables('primary_region'),'westcentralus')),'southcentralus',variables('primary_region'))]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2020-03-01",
            "name": "[variables('amlWorkspaceName')]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyvault_name'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
            ],
            "sku": {
                "tier": "Enterprise",
                "name": "Enterprise"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "friendlyName": "[variables('amlWorkspaceName')]",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults',variables('keyvault_name'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components',variables('applicationInsightsName'))]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts/',variables('blobStorageAccountName'))]",
                "hbiWorkspace": false,
                "allowPublicAccessWhenBehindVnet": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('blobStorageAccountName'), '/default/azureml')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('blobStorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('blobStorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "name": "[variables('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('vmNetworkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                "vmSize": "[variables('vmSize')]"
                },
                "storageProfile": {
                "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                    "storageAccountType": "Premium_LRS"
                    }
                },
                "imageReference": {
                    "publisher": "microsoftvisualstudio",
                    "offer": "visualstudio2019latest",
                    "sku": "vs-2019-comm-latest-ws2019",
                    "version": "latest"
                }
                },
                "networkProfile": {
                "networkInterfaces": [
                    {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNetworkInterfaceName'))]"
                    }
                ]
                },
                "osProfile": {
                "computerName": "[variables('vmName')]",
                "adminUsername": "[parameters('vmUsername')]",
                "adminPassword": "[parameters('vmPassword')]",
                "windowsConfiguration": {
                    "enableAutomaticUpdates": true,
                    "provisionVmAgent": true
                }
                }
            },
            "resources": [
                {
                "name": "SetupLabVm",
                "type": "extensions",
                "apiVersion": "2020-06-01",
                "location": "[variables('primary_region')]",
                "properties": {
                    "publisher": "Microsoft.Compute",
                    "type": "CustomScriptExtension",
                    "protectedSettings": {},
                    "typeHandlerVersion": "1.9",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                    "fileUris": ["[variables('vmCustomScriptUri')]"],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('vmCustomScriptFileName'))]"
                    }
                },
                "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                ],
                "tags": {
                    "displayName": "SetupLabVm"
                }
                }
            ]
            },
            {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2020-06-01",
            "location": "[variables('primary_region')]",
            "properties": {
                "addressSpace": {
                "addressPrefixes": ["[variables('addressPrefix')]"]
                },
                "subnets": [
                {
                    "name": "[variables('subnetName')]",
                    "properties": {
                    "addressPrefix": "[variables('subnetPrefix')]"
                    }
                }
                ]
            }
            },
            {
            "name": "[variables('vmNetworkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('vmPublicIpAddressName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('vmNetworkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                    "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                    },
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIpAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('vmPublicIpAddressName'))]"
                    }
                    }
                }
                ],
                "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNetworkSecurityGroupName'))]"
                }
            }
            },
            {
            "name": "[variables('vmPublicIpAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-06-01",
            "location": "[variables('primary_region')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "sku": {
                "name": "Basic"
            }
            },
            {
            "name": "[variables('vmNetworkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-06-01",
            "location": "[variables('primary_region')]",
            "properties": {
                "securityRules": [
                {
                    "name": "RDP",
                    "properties": {
                    "priority": 300,
                    "protocol": "Tcp",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "3389"
                    }
                }
                ]
            }
        }
    ]
}
